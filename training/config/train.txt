# ===================================================================
# Training Configuration for ITALSTMNetVIT
# ===================================================================

## -------------------------------------------------------------------
## Core Paths
## -------------------------------------------------------------------
# basedir should point to your project's root directory.
basedir = /Projects/Agus/Drone-OA-IREE-ViT-Accelerator

# Directory for saving logs, checkpoints, and TensorBoard files.
logdir = training/logs

# Parent directory where your datasets are stored.
datadir = /Projects/Agus/Drone-OA-IREE-ViT-Accelerator/training/datasets


## -------------------------------------------------------------------
## Dataset and Model Specification
## -------------------------------------------------------------------
# The name of your dataset folder.
dataset = data

# Select your custom model using the key you added in train.py.
model_type = ITALSTMNetVIT_single_layer

# Validation split fraction. 0.2 (20%) is a robust choice.
val_split = 0.2

# Set a seed for reproducible train/validation splits and weight initialization.
seed = 42

# Use all data. Set to a positive integer to load only a few trajectories for debugging.
short = 0


## -------------------------------------------------------------------
## Training Hyperparameters (Best Practices)
## -------------------------------------------------------------------
# Initial learning rate. 1e-4 is a solid starting point for Adam with Transformer-based models.
lr = 1e-4

# Number of training epochs. Set high and use early stopping based on validation loss.
N_eps = 500

# Enable learning rate warmup. Crucial for stabilizing Transformer training.
lr_warmup_epochs = 10

# Enable learning rate decay after warmup. Helps fine-tune convergence.
lr_decay = True

# Device to train on.
device = cuda


## -------------------------------------------------------------------
## Checkpointing and Validation
## -------------------------------------------------------------------
# Frequency (in epochs) to save model checkpoints.
save_model_freq = 10

# Frequency (in epochs) to run validation. More frequent validation helps pinpoint the best model.
val_freq = 5

# Set to True if you want to resume training from a specific checkpoint.
load_checkpoint = False
checkpoint_path = ''